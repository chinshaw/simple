<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.simple</groupId>
	<artifactId>artisan</artifactId>
	<version>1.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Artisan Analytics</name>
	<description>Artisan Analytics</description>

	<issueManagement>
		<system>github</system>
		<url>http://github.com/chinshaw/simple</url>
	</issueManagement>

	<properties>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<!-- Don't let your Mac use a crazy non-standard encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<apache.commons.version>3.1</apache.commons.version>

		<shiro.version>1.2.2</shiro.version>

		<jersey.version>1.18.1</jersey.version>
		<protostuff.version>1.0.8</protostuff.version>
		<quartz.version>2.2.1</quartz.version>
		<guice.version>3.0</guice.version>
		<guava.version>11.0.2</guava.version>
		<hadoop.version>2.4.1</hadoop.version>
		<hbase.version>0.98.2-hadoop2</hbase.version>
		<jackson.version>1.9.2</jackson.version>

		<jetty.version>7.2.0.v20101020</jetty.version>
		<tomcat.version>7.0.53</tomcat.version>
		<activemq.version>5.7.0</activemq.version>
		<camel.version>2.13.0</camel.version>
	</properties>

	<modules>
		<module>modules/api</module>
		<module>modules/orchestrator</module>
		<module>modules/domain</module>
		<module>modules/web</module>
		<module>modules/security</module>
		<module>modules/reporting</module>
		<module>modules/repository</module>
		<!-- Disabling until complete -->
		<!-- <module>radapter</module> -->
		<module>modules/utils</module>
	</modules>

	<scm>
		<connection>
      			scm:git:https://github.com/chinshaw/simple-original
    		</connection>
		<developerConnection>
      			scm:git:https://github.com/chinshaw/simple-original
    		</developerConnection>
	</scm>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-dbcp</artifactId>
				<version>${tomcat.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-servlet-api</artifactId>
				<version>${tomcat.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-core</artifactId>
				<version>${tomcat.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-jasper</artifactId>
				<version>${tomcat.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.tomcat.embed</groupId>
				<artifactId>tomcat-embed-logging-juli</artifactId>
				<version>${tomcat.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-all</artifactId>
				<version>${activemq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>

			<!-- GIN and Guice for IoC / DI -->
			<dependency>
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-servlet</artifactId>
				<version>${guice.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${apache.commons.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>${apache.commons.version}</version>
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
			</dependency>

			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
				<version>${protostuff.version}</version>
			</dependency>

			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-xml</artifactId>
				<version>${protostuff.version}</version>
			</dependency>

			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
				<version>${protostuff.version}</version>
			</dependency>

			<dependency>
				<groupId>com.dyuproject.protostuff</groupId>
				<artifactId>protostuff-json</artifactId>
				<version>${protostuff.version}</version>
			</dependency>


			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-web</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-aspectj</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-guice</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-client</artifactId>
				<version>${hadoop.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-client</artifactId>
				<version>${hbase.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.hadoop</groupId>
						<artifactId>hadoop-common</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-server</artifactId>
				<version>${hbase.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-json</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey.jersey-test-framework</groupId>
				<artifactId>jersey-test-framework-core</artifactId>
				<version>${jersey.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey.jersey-test-framework</groupId>
				<artifactId>jersey-test-framework-grizzly</artifactId>
				<version>1.18.1</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.sun.jersey.contribs</groupId>
				<artifactId>jersey-guice</artifactId>
				<version>${jersey.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>


	<!-- Configuration on which reports will be run, we really don't need the 
		dependencies plugin so we will disable it. It takes quite a while to run 
		if not -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>project-team</report>
							<report>license</report>
							<report>mailing-list</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>plugin-management</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- This is used to create a report for our unit tests. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.14.1</version>
			</plugin>

			<!-- Site plugin that will look at our bugzilla server and compile a report 
				of the open bugs that can be viewed on our site. This is very useful for 
				users to see if there is already an open issue that they are seeing. -->
			<plugin>
				<groupId>de.smartics.maven.plugin</groupId>
				<artifactId>issues-maven-plugin</artifactId>
				<version>0.4.3</version>
				<configuration>
					<issueManagementUser>reports@localhost.com</issueManagementUser>
					<issueManagementPassword>reports</issueManagementPassword>

					<product>Simple Analytics</product>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>bugzilla-releasenotes-report</report>
							<report>bugzilla-issues-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>

	<repositories>
		<repository>
			<id>local_repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>file://${project.basedir}/local_repo</url>
		</repository>
	</repositories>

	<dependencies>


		<!-- GIN and Guice for IoC / DI -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>${guice.version}</version>
		</dependency>

		<!-- Unit tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.apiviz</groupId>
			<artifactId>apiviz</artifactId>
			<version>1.3.1.GA</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>



	<!-- Build Plugins -->
	<build>

		<!-- Generate compiled stuff in the folder used for development mode -->
		<outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>

		<plugins>
			<!-- Apiviz is a plugin that will generate the visual output graphics 
				on our javadoc. This gives the user a visual representation of the layout 
				of the classes -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<doclet>org.jboss.apiviz.APIviz</doclet>
					<docletArtifact>
						<groupId>org.jboss.apiviz</groupId>
						<artifactId>apiviz</artifactId>
						<version>1.3.2.GA</version>
					</docletArtifact>
					<useStandardDocletOptions>true</useStandardDocletOptions>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
					<docencoding>UTF-8</docencoding>
					<breakiterator>true</breakiterator>
					<version>true</version>
					<author>true</author>
					<keywords>true</keywords>
					<additionalparam>
						-sourceclasspath ${project.build.outputDirectory}
					</additionalparam>
				</configuration>
			</plugin>

			<!-- Site plugin so that it will compile our wiki documents to be viewed, 
				this way our documenation can be viewed right in the project and it can be 
				deployed using plugin. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.2</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- This will create test case jars for all the projects, this way you 
				can include the test class as a depencency for testing. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
