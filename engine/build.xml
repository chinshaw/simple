<?xml version="1.0" encoding="UTF-8"?>

<!-- This is not fully functional and is only used to enhance the jpa classes right now.
     One task would be to complete this ant file to do builds. -->
<project name="taskengine" default="default" basedir=".">

	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="deploy" />
	<property name="lib.dir" location="lib" />
	<property name="ui.lib.dir" location="../ui/war/WEB-INF/lib" />
	
	<property name="classes.dir" location="build/classes" />
	<property name="server.output.jar" value="taskengine-server.jar" />
	<property name="client.output.jar" value="taskengine-client.jar" />
	<property name="manifest" value="MANIFEST.MF" />

	<path id="lib.classpath">
		<fileset dir="lib">
			<include name="quartz-2.1.7.jar" />
			<include name="log4j-1.2.16.jar" />
		</fileset>
	</path>

	<patternset id="meta-files">
		<include name="**/*.xml" />
		<include name="**/*.properties" />
		<include name="**/*.policy" />
	</patternset>


	<target name="default" depends="compile, buildinfo, ${server.output.jar}">
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}">
			<classpath>
				<pathelement location="${src.dir}" />
				<path refid="lib.classpath" />
			</classpath>
		</javac>

		<mkdir dir="${classes.dir}/META-INF" />
		<copy todir="${classes.dir}/META-INF">
			<fileset dir="${src.dir}/META-INF">
				<patternset refid="meta-files" />
			</fileset>
		</copy>
	</target>

	<!-- 
		 Build the executable output server jar file
		 This does not include the client code but simply the server executable
		 It does also include the quartz runtime environment.
	-->
	<target name="${server.output.jar}" depends="compile">
		<manifest file="${classes.dir}/MANIFEST.MF">
			<attribute name="Main-Class" value="com.simple.original.scheduler.server.TaskEngineServer" />
		</manifest>
		<jar destfile="${dist.dir}/${server.output.jar}" manifest="${classes.dir}/MANIFEST.MF">
			<fileset dir="${classes.dir}">
				<include name="com/simple/original/scheduler/server/**" />
				<include name="com/simple/original/scheduler/shared/**" />
				<include name="META-INF/**" />
			</fileset>
			<zipgroupfileset dir="${lib.dir}" excludes="META-INF/**/*" includes="**/*.jar" />
			<fileset dir="${src.dir}" includes="**/*.java" />
		</jar>
	</target>

	<!--
		The client output jar that only includes client code.
	-->
	<target name="${client.output.jar}" depends="compile">
		<jar destfile="${dist.dir}/${client.output.jar}">
			<fileset dir="${classes.dir}">
				<include name="com/simple/original/scheduler/client/**" />
				<include name="com/simple/original/scheduler/shared/**" />
				<include name="META-INF/**" />
			</fileset>
			<fileset dir="${src.dir}" includes="com/simple/original/scheduler/client/*.properties" />
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>


	<target name="buildinfo">
			<tstamp>
					<format property="builtat" pattern="MM/dd/yyyy hh:mm aa" timezone="America/New_York"/>
			</tstamp>        
			<exec executable="svnversion" outputproperty="svnversion"/>
			<exec executable="whoami" outputproperty="whoami"/>
			<exec executable="uname" outputproperty="buildsystem"><arg value="-a"/></exec>

			<propertyfile file="build/classes/META-INF/project.properties"
					comment="This file is automatically generated - DO NOT EDIT">        
					<entry key="buildtime" value="${builtat}"/>
					<entry key="build" value="${svnversion}"/>
					<entry key="builder" value="${whoami}"/>
					<entry key="version" value="${version}"/>
					<entry key="system" value="${buildsystem}"/>
			</propertyfile>
	</target>

</project>
